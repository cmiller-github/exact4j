package com.exact.ews.transaction.enums;

import java.util.Map;
import java.util.HashMap;

/*
 * User: donch
 * Date: 31-Jul-2008
 * Time: 09:05:17
 */
public enum CavvResponse
{
  // CAVV not present
  NotPresent(' '),
  // CAVV Authentication Results Code is not valid
  AuthenticationCodeNotValid('0'),
  // CAVV failed validation (Authentication, Issuer generated)
  FailAuthenticationIssuer('1'),
  // CAVV passed validation (Authentication, Issuer generated)
  PassAuthenticationIssuer('2'),
  // CAVV passed validation (Attempt, Issuer generated)
  PassAttemptIssuer('3'),
  // CAVV failed validation (Attempt, Issuer generated)
  FailAttemptIssuer('4'),
  // Reserved for future Use
  Reserved('5'),
  // CAVV not validated, Issuer not participating in CAVV validation
  IssuerNotParticipating('6'),
  // CAVV failed validation.  (Attempt, generated by Visa)
  FailAttemptVisa('7'),
  // CAVV passed validation.  (Attempt, generated by Visa)
  PassAttemptVisa('8'),
  // CAVV failed validation.  (Attempt, generated by Visa because Issuer not available)
  FailAttemptVisaIssuerNA('9'),
  // CAVV passed validation.  (Attempt, generated by Visa because Issuer not available)
  PassAttemptVisaIssuerNA('A'),
  // CAVV for information only, no liability shift.
  InformationOnly('B'),
  //  CAVV not validated, no validation result code received from Issuer
  NoValidationCode('C'),
  // CAVV not validated, no validated result code received from Issuer
  NoValidatedCode('D');

  private char code;
  private CavvResponse(final char code)
  {
    this.code = code;
  }

  // set up a mapping so we can get them back when decoding
  private static Map<Character,CavvResponse> itemByCode = new HashMap<Character,CavvResponse>();
  static {
    for(CavvResponse t: CavvResponse.values())
      itemByCode.put(t.getCode(), t);
  }

  public static CavvResponse getFromCode(final char code)
  {
    return itemByCode.get(code);
  }

  public char getCode()
  {
    return code;
  }

}
